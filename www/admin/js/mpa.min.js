/*$( document ).ready(function() {
//console.log( "ready!" );
loadAccounts();
});*/

function updateDisconnect()
{
	var disconnect = $( "#mpaDisconnect" );
	disconnect.attr( "href" , disconnect.attr( "href" ) + tokenQueryString );

	var accounts = $( "#mpaAccounts" );
	accounts.attr( "href" , accounts.attr( "href" ) + tokenQueryString );
}

// Set MPA in title and add MPA version
function setMPATitle()
{
	$.getJSON("../../res/infos" + tokenQueryString, function(msg)
	{
		document.title += " - " + msg.infos.version;
	});
}

function loadUsers()
{
	updateDisconnect();

	setMPATitle();
	
	var users = '';
	users += '<div class="row">';
	users += ' <div class="col-md-3 col-xs-12">';
	users += '	 <input type="text" width="100%" class="full" tabindex="1" name="login" placeholder="Compte" id="mpaUserLogin"></input>';
	users += ' </div>';
	users += ' <div class="col-md-3 col-xs-6">';
	users += '	 <input type="password" width="100%" class="full" tabindex="1" name="pwd" placeholder="Mot de passe" id="mpaUserPassword" type="password"></input>';
	users += ' </div>';
	users += ' <div class="col-md-3 col-xs-6">';
	users += '	 <input type="password" width="100%" class="full" tabindex="1" name="pwdCheck" placeholder="Confirmer mot de passe" id="mpaUserPasswordConfirm" ></input>';
	users += ' </div>';
	users += ' <div class="col-md-1 col-xs-6">Adminisrateur</div>';
	users += ' <div class="col-md-1 col-xs-6">MDP erreur</div>';
	users += ' <div class="col-md-1 col-xs-12">';
	users += '	 <button name="e" id="mpaAddButton" class="full">+</button>';
	users += ' </div>';
	users += '</div>';

	// Insert in DOM
	$("#mpaUsers").html(users);

	// Load account from REST server
	$.getJSON("../../res-adm/users" + tokenQueryString, function(msg)
	{
		$.each(msg.users, function(index, user)
		{
			htmlAddUser( user.id , user.version , user.login , user.isAdmin, user.pwdErrNbr );
		});
	});
	
	// Register add action on click to add a user
	$("#mpaAddButton").click(function()
	{
		restAddUser();
	});
}

// Add user in html
function htmlAddUser( userId , userVersion , userLogin , userIsAdmin, pwdErrNbr )
{
	var users = '<div class="row" id="' + userId + '" version="' + userVersion + '">';
	users += '<div class="col-md-3 col-xs-12" id="' + userId + '_userLogin"></div>';
	users += '<div class="col-md-3 col-xs-6" id="' + userId + '_userPwd"></div>';
	users += '<div class="col-md-3 col-xs-6" id="' + userId + '_userPwdNew" style="display:none"><input class="form-control"></input></div>';
	users += '<div class="col-md-3 col-xs-6" id="' + userId + '_userPwdCheck"></div>';
	users += '<div class="col-md-3 col-xs-6" id="' + userId + '_userPwdCheckNew" style="display:none"><input class="form-control"></input></div>';
	users += '<div class="col-md-1 col-xs-6">' + userIsAdmin + '&nbsp;</div>';	
	users += '<div class="col-md-1 col-xs-6">' + pwdErrNbr + '&nbsp;<button class="">Reset</button></div>';
	users += '<div class="col-md-1 col-xs-12" id="' + userId + '_delButton"></div>';
	users += '</div>';

	//alert(users);

	// Insert in DOM
	if( $("#mpaUsers div.row").length == 0 )	$("#mpaUsers").html(users);
	else	$(users).insertAfter($("#mpaUsers div.row:last"));

	// Only normal user can be deleted
	if( userIsAdmin == "false" ) $( "#" + userId + '_delButton' ).html( '<button class="del full">-</button>' );

	// Update user here
	// In order to avoid <script> code injection
	$( "#" + userId + "_userLogin" ).text( userLogin ).html();

	// Attach function to button freshly inserted in DOM
	$("#" + userId + " div button.del").click( restAndHtmlDelUser );

	// Attach function to account name freshly inserted in DOM
	// TODO $("#" + userId + "_userLogin").click( { userId: userId }, changeUserPseudo  );

	// Register update action on enter key to update an account
	// Code is here and not in changeAccountName because otherwize keypress is registered each time
	// a rename action (ENTER key press) is performed => several POST request
	//TODO $("#" + userId + "_accountNameNew input").keypress( { accountId: accountId }, restUpdateAccount );

	// Avoid to have focus on input field
	// => avoid to have keyboard on mobile devices
	$("#mpaUserLogin").blur();

}


function changeAccountName( event )
{
	// Get account if given in parameter
	var accountId = event.data.accountId;
	// Get account name
	var accountName = $("#" + accountId + "_accountName").text();

	// Hide account
	$("#" + accountId + "_accountName").hide();

	// Show editable account name
	$("#" + accountId + "_accountNameNew").show();

	// Update input field and allows to :
	// * Give the focus
	// * Have cursor at the end of value
	$("#" + accountId + "_accountNameNew input").focus().val( accountName  );
}

// Ask to add user on REST server
function restAddUser()
{
	// Disable add button in waiting server response
	$( "#mpaAddButton" ).prop( "disabled" , true );

	// Get user values
	var userLogin =  $("#mpaUserLogin").val();
	var userPassword =  $("#mpaUserPassword").val();
	var userPasswordConfirm =  $("#mpaUserPasswordConfirm").val();

	$.post('../../res-adm/users/0/add', {
		login : userLogin,
		password : userPassword,
		passwordConfirm : userPasswordConfirm,
		token : mpaToken
	}).done(function(data)
	{
		var response = jQuery.parseJSON(data);
		var userId = response.id;

		// Error in addind account
		if( isNaN(parseInt(userId, 16)) )
		{
			// Display error message
			alert(userId);
		}
		else
		{
			htmlAddUser( response.id , response.version , userLogin , "false" , 0 );
			// Clear input field
			$("#mpaUserLogin").val('');
			$("#mpaUserPassword").val('');
			$("#mpaUserPasswordConfirm").val('');
		}
	}).fail(function() {
		alert("Error, asks administrator for details");
	}).always(function() {
		// Enable add button after server response
		$( "#mpaAddButton" ).prop( "disabled" , false );
	})
}

// Ask to REST server to delete account
// If OK, performe action in HTML 
function restAndHtmlDelUser()
{
	// Get account ID
	var userIdToDelete = $(this).parent().parent().attr('id');
	// Get account version
	var userVersion = $(this).parent().parent().attr('version');
	
	// Disable del button in waiting server response
	$( "#" + userIdToDelete + " td button" ).prop( "disabled" , true );

	$.post('../../res/users/' + userIdToDelete + '/del', {
		// Without this line there is a post error !
		// So it seems one parameter minimum is necessary
		id : userIdToDelete,
		version: userVersion,
		token : mpaToken
	}).done(function(data)
	{
		// Get JSON response
		var response = jQuery.parseJSON(data);
		// Get account ID from response
		var userId = response.id;

		// Error in deleting account
		if( isNaN( parseInt( userId , 16 ) ) )
		{
			// Display error message
			alert(userId);
		}
		else
		{
			// Delete account in HTML
			$( "#" + userIdToDelete ).remove();
		}
	}).fail(function() {
		alert("Error, asks administrator for details");
	})
	//.always( function() {
		// Give focus to account name
		//$("#mpaAccountName").focus();
	//})
}

// Ask to update account on REST server
function restUpdateAccount( event )
{
	// Get account given in parameter
	var accountId = event.data.accountId;

	// Manage cariage return
	if( event.which == 13 )
	{
		// Prevent default browser behavior
		event.preventDefault();

		
		// Get account version
		var accountVersion = $("#" + accountId ).attr( 'version' );

		// Get new account input name
		var accountNameNewInput = $("#" + accountId + "_accountNameNew input"); 
		// Disable new account input name in waiting server response
		accountNameNewInput.prop( "disabled" , true );

		// Get new account name
		var accountNameNew = accountNameNewInput.val();

		$.post('res/accounts/' + accountId + '/upd', {
			name : accountNameNew,
			version: accountVersion
		}).done(function(data)
		{
			var response = jQuery.parseJSON(data);
			var accountId = response.id;

			// Error in addind account
			if( isNaN(parseInt(accountId, 16)) )
			{
				// Display error message
				alert(accountId);
			}
			else
			{
				// Hide and reset editable account name
				$("#" + accountId + "_accountNameNew").hide();
				$("#" + accountId + "_accountNameNew").val( '' );

				// Update account version
				$("#" + accountId ).attr( 'version' , response.version );

				// Update account name and show it
				$("#" + accountId + "_accountName").text( accountNameNew );
				$("#" + accountId + "_accountName").show();
			}
		}).fail(function() {
			alert("Error, asks administrator for details");
		}).always(function() {
			// Enable new account input name after server response
			accountNameNewInput.prop( "disabled" , false );			
		})
	}
	// ECHAP
	else if( event.which == 0 )
	{
		// Hide and reset editable account name
		$("#" + accountId + "_accountNameNew").hide();
		$("#" + accountId + "_accountNameNew").val( '' );

		// Display account name
		$("#" + accountId + "_accountName").show();
	}
}

